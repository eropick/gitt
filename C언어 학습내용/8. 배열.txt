배열은 동일한 형태의 변수를 다중으로 선언하여 사용할 수 있는 개념이다.

예를들어 정수형 변수 5개가 필요하다면
int one, two, three, four, five;
와 같이 선언해서 사용해도 되지만...
개수가 100개가 넘어가는 경우 이렇게 일일이 지정해주기 힘들것이다.

그래서 다음과 같은 형태로 배열을 선언한다.
int num[100];

100개의 원소를 가지는 배열을 선언하면 각 원소는 
0번부터 99번까지의 index로 접근 또는 참조할 수 있다.
항상 0번부터 n-1번까지 인자를 갖는다. 
100번은 끝을 나타내는 null값이 들어있다.

배열의 초기화
num[0] = 0;
num[1] = 1;
이렇게 일일이 하나씩 할 수도 있지만..

1. for문을 활용해서 반복한다거나 
2. 선언을 하는 동시에 0으로 초기화
int num[10] = {0,};
맨 앞인덱스만 중괄호안에 있는 숫자로 초기화 되고 그 뒤는 전부 0이다.
3. memset이라는 함수를 사용하면 된다고 한다.

배열의 크기를 지정하지 않고 원소만 지정해서 초기화할 수도 있다.
int num[] = {0,23,55,23};

배열 크기를 지정해줘도 된다.
int num[4] = {0,23,55,23};

키보드에서 입력한 값을 배열에 넣을 때에는
똑같이 주소연산자 &를 이용해서 넣어주면 된다.
scanf_s("%d",&(num[0]) );

문자형 배열
하나의 문자를 저장하기 위해서는 char변수가 사용되는데
이 변수의 숫자 값은 ASCII코드에서 각 문자가 가르키는 숫자의 값이다.
A는 65 a는 A에 32를 더한 97이라는 값을 갖는다.
여기에서 1씩 더해질 때마다 알파벳 순서가 된다.

이러한 문자들이 많을 경우 배열로 표현해 사용한다.
여러 문자를 한 번에 저장해서 사용하는 형태
char c[5] = {'h','c','d','d','e'};
으로 사용할 수도 있지만.
char c[] = "hcdde"와 배열크기 없이 같이 초기화해서 
사용하는 것이 일반적이다.

문자형 배열의 크기를 sizeof로 구해보면
char은 1byte로 나오는데 배열인 char []을 보면
항상 사용한 문자보다 +1된 크기가 측정된다. 이는
문자열의 끝에 사용되는 /가 자동으로 첨가되어 계산되기 때문이다.

배열의 중간에 '\0' 을 할당해서 출력해보면
할당한 부분부터 출력이 되지 않는다는 사실을 알 수 있다.

문자열의 길이는 sizeof로도 구할 수 있지만 
strlen()함수를 사용하면 쉽게 알 수 있다.
string.h 헤더를 참조해야 한다.

문자열을 표시하는 형식지정자는 %s이다.
보통 입력받을 때 변수의 주소연산자(&)로 주소에 할당받는데
문자열의 경우 배열 이름 자체가 배열의 첫번째 주소를 가르키기 때문에
주소연산자를 사용하는 것이 옳지 않다. 

%s로 받을 때 scanf나 scanf_s를 사용하는데
scanf_s를 사용할 경우 문자열 같은 경우에는
("형식지정자",할당받을 주소,크기) 크기를 추가로 적어줘야 사용가능하다.

scanf에 대해 알게된 사실: 공백(스페이스바)을 입력받으면 
입력받기 전까지의 문장만 할당된다.
따라서 공백도 입력받으려면 gets(문자열)나 gets_s(문자열,크기)함수를 사용한다.
scanf로 할 때는 %[^\n]s 로 하면 줄바꿈 입력받기 전에는 모든 문자 입력이라 이걸로해도 된다.