반복문

1. for반복문

for(초기값; 조건; 연산)
{
    실행내용
}

중간에 빠져나오고 싶으면 break;

동일하게 쓸 수 있다.

초기값;
for( ;조건; )
{
실행내용
연산;
}

처음 for문을 만나면 초기값을 먼저 실행한다.(1번만)
그 후 조건에 맞다면 내용을 실행하고 마지막으로 
연산(보통 숫자가 오르거나 내리는 연산)작업을 끝낸다.

for안에 아무것도 없이(;;)로 표기해도 실행은 되지만
조건이 없기 때문에 기본적으로 무한 반복이 되며
이럴 경우 실행내용에 if조건을 걸어줘서 
break;로 빠져나오는 것이 기본이다.

for문을 사용하다보면 n++나 ++n 연산을 하게되는데
이는 큰 차이점이 있다. n--와 --n도 동일하다.

n++의 경우는 n먼저 참조를 한 뒤에 n의 값을 1증가시키는 것이고
++n의 경우는 1먼저 증가 시킨 뒤에 n을 참조한다는 차이다.
(왼쪽에서 읽는 것이 먼저 실행된다고 보면 쉽다.)

예를들어 printf("%d",n++) 를 했을 경우 n의 값은 결과적으로
n+1이 될테지만 출력되는 값은 n먼저 참조했기 때문에 n이 출력된다.